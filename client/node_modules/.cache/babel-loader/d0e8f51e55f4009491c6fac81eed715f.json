{"ast":null,"code":"var _jsxFileName = \"/Users/fernandoalvarado/react-click-game/src/App.js\";\nimport React, { Component } from \"react\";\nimport Header from \"./components/Header\";\nimport Navbar from \"./components/Navbar\";\nimport Item from \"./components/Item\";\nimport pokemon from \"./pokemon.json\";\nimport FriendCard from \"./components/FriendCard\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      score: 0,\n      topScore: 0,\n      maxScore: 12,\n      message: \"Choose A Pokemon!\",\n      messageClass: \"\",\n      poke: characters\n    };\n\n    this.shuffle = array => {\n      let currentIndex = array.length;\n      let temporaryValue;\n      let randomIndex;\n\n      while (0 !== currentIndex) {\n        randomIndex = Math.floor(Math.random() * currentIndex);\n        currentIndex -= 1;\n        temporaryValue = array[currentIndex];\n        array[currentIndex] = array[randomIndex];\n        array[randomIndex] = temporaryValue;\n      }\n\n      return array;\n    };\n\n    this.correctChoice = () => {\n      if (this.state.score + 1 > this.state.topScore) {\n        this.setState({\n          topScore: this.state.topScore + 1\n        });\n      }\n\n      if (this.state.score + 1 === this.state.maxScore) {\n        this.setState({\n          score: this.state.score + 1,\n          message: \"You win\",\n          messageClass: \"Correct\"\n        });\n      } else {\n        this.setState({\n          score: this.state.score + 1,\n          message: \"You guessed correctly\",\n          messageClass: \"Correct\"\n        });\n      }\n    };\n\n    this.wrongChoice = () => {\n      this.setState({\n        score: 0,\n        message: \"You guessed incorrectly!\"\n      });\n      const updatedCharacters = this.state.characters.map(ch => ch.isClicked === true ? { ...ch,\n        isClicked: false\n      } : ch);\n      return updatedCharacters;\n    };\n\n    this.winReset = currectCharacters => {\n      if (this.state.score + 1 === this.state.maxScore) {\n        this.setState({\n          score: 0,\n          topScore: 0\n        });\n        const updatedCharacters = currectCharacters.map(ch => true ? { ...ch,\n          isClicked: false\n        } : ch);\n        return updatedCharacters;\n      } else {\n        return currectCharacters;\n      }\n    };\n\n    this.randomizeCharacters = name => {\n      var resetNeeded = false;\n      const characters = this.state.characters.map(ch => {\n        if (ch.name === name) {\n          if (ch.isClicked === false) {\n            this.correctChoice();\n            return { ...ch,\n              isClicked: true\n            };\n          } else {\n            resetNeeded = true;\n            return { ...ch,\n              isClicked: false\n            };\n          }\n        }\n\n        return ch;\n      });\n\n      if (resetNeeded) {\n        this.setState({\n          characters: this.shuffle(this.wrongChoice()),\n          messageClass: \"incorrect\"\n        });\n      } else {\n        this.setState({\n          characters: this.shuffle(this.winReset(characters))\n        });\n      }\n    };\n\n    this.renderCharacter = () => {\n      return this.state.characters.map(character => /*#__PURE__*/React.createElement(Item, {\n        image: character.image,\n        name: character.name,\n        key: character.id,\n        onClick: this.randomizeCharacters,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }\n      }));\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Navbar, {\n      score: this.state.score,\n      topscore: this.state.topScore,\n      message: this.state.message,\n      messageClass: this.state.messageClass,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }\n    }, this.renderCharacter()));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/fernandoalvarado/react-click-game/src/App.js"],"names":["React","Component","Header","Navbar","Item","pokemon","FriendCard","App","state","score","topScore","maxScore","message","messageClass","poke","characters","shuffle","array","currentIndex","length","temporaryValue","randomIndex","Math","floor","random","correctChoice","setState","wrongChoice","updatedCharacters","map","ch","isClicked","winReset","currectCharacters","randomizeCharacters","name","resetNeeded","renderCharacter","character","image","id","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Header from \"./components/Header\";\nimport Navbar from \"./components/Navbar\";\nimport Item from \"./components/Item\";\nimport pokemon from \"./pokemon.json\";\nimport FriendCard from \"./components/FriendCard\";\n\nclass App extends Component {\n\n  state = {\n    score: 0,\n    topScore: 0,\n    maxScore: 12,\n    message: \"Choose A Pokemon!\",\n    messageClass:\"\",\n    poke: characters\n  };\n  \n  shuffle = (array) => {\n    \n    let currentIndex = array.length;\n    let temporaryValue;\n    let randomIndex;\n  \n    while (0 !== currentIndex) {\n  \n      randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex -= 1;\n  \n      temporaryValue = array[currentIndex];\n      array[currentIndex] = array[randomIndex];\n      array[randomIndex] = temporaryValue;\n    }\n    return array;\n  \n  }\n  \n  correctChoice = () => {\n  \n    if (this.state.score + 1 > this.state.topScore) {\n      this.setState({topScore: this.state.topScore + 1})\n    }\n    if (this.state.score + 1 === this.state.maxScore) {\n      this.setState({score: this.state.score + 1, message: \"You win\", messageClass: \"Correct\"})\n    } else {\n      this.setState({score: this.state.score + 1, message: \"You guessed correctly\", messageClass: \"Correct\"})\n    }\n  \n  } \n  \n  wrongChoice = () => {\n  \n    this.setState({score: 0, message: \"You guessed incorrectly!\"})\n    const updatedCharacters = this.state.characters.map(ch => ch.isClicked === (true) ? { ...ch, isClicked: false } : ch)\n    return updatedCharacters\n  \n  }\n  \n  winReset = (currectCharacters) => {\n  \n    if (this.state.score + 1 === this.state.maxScore) {\n      this.setState({score: 0, topScore: 0})\n      const updatedCharacters = currectCharacters.map(ch => (true) ? { ...ch, isClicked: false} : ch)\n        return updatedCharacters\n    } else {\n      return currectCharacters\n    }\n  \n  } \n  \n  \n  randomizeCharacters = (name) => {\n  \n    var resetNeeded = false;\n    const characters = this.state.characters.map(ch => {\n  \n      if(ch.name === name) {\n        if (ch.isClicked === false) {\n          this.correctChoice()\n          return { ...ch, isClicked: true}\n        } else {\n          resetNeeded = true\n          return { ...ch, isClicked: false}\n        }\n      }\n      return ch\n    })\n    if (resetNeeded) {\n      this.setState({\n        characters: this.shuffle(this.wrongChoice()),\n        messageClass:\"incorrect\"\n      })\n      \n    } else {\n      this.setState({ characters: this.shuffle(this.winReset(characters)) })\n    }\n    \n  } \n  \n  renderCharacter = () => {\n  \n    return ( this.state.characters.map((character) => \n            <Item \n              image={character.image} \n              name={character.name} \n              key={character.id} \n              onClick={this.randomizeCharacters} \n            />\n  \n          ))\n  };\n  \n  render () {\n  \n    return (\n      <div className=\"App\">\n        <Navbar\n          score={this.state.score}\n          topscore={this.state.topScore}\n          message={this.state.message}\n          messageClass={this.state.messageClass}\n        />\n  \n        <Header />\n        <div className=\"content\">\n          {this.renderCharacter()}\n        </div>\n      </div>\n  \n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}